{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/photos/photos.component.ts","./src/app/components/photos/photos.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/photos.service.ts","./src/app/app.module.ts","./src/app/materials.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PhotosService } from '../../services/photos.service';\r\nimport { Photo } from '../../modules/photos';\r\n\r\n@Component({\r\n  selector: 'app-photos',\r\n  templateUrl: './photos.component.html',\r\n  styleUrls: ['./photos.component.css']\r\n})\r\nexport class PhotosComponent implements OnInit {\r\n\r\n\r\n  photos: Photo[]= [];  \r\n\r\n\r\n  constructor(public photosService: PhotosService){\r\n    this.photosService.getPhotos()\r\n    .subscribe(\r\n      photos => {\r\n        console.log(photos);\r\n        this.photos = photos;\r\n      },\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card *ngFor=\"let photo of photos\">\r\n    <mat-card-subtitle>\r\n        {{photo.title}}\r\n    </mat-card-subtitle>\r\n    <img [src]=\"photo.thumbnailUrl\" mat-card-image>\r\n    <mat-card-content>\r\n        <p>Album id: {{photo.albumId}}</p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <a mat-raised-button [href]=\"photo.url\" target=\"_blank\">\r\n            show image\r\n        </a> \r\n        <button mat-button mat-flat-button color=\"primary\">\r\n            click\r\n        </button>\r\n    </mat-card-actions>\r\n</mat-card> ","import { Component, OnInit } from '@angular/core';\r\nimport { PhotosService } from './services/photos.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent{\r\n\r\n  albumsId = [1 ,2, 3]\r\n  title = 'isa-spa';\r\n\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n  ISA SPA \r\n</mat-toolbar>\r\n\r\n<main>\r\n  <mat-card>\r\n    <form action=\"\">\r\n      <img src=\"/assets/img/ISASPA.png\" alt=\"img\"> \r\n      <mat-form-field>\r\n        <mat-label>Titulos</mat-label>\r\n        <input type=\"text\"  matInput placeholder=\"title\" #title>\r\n      </mat-form-field>\r\n      <mat-form-field >\r\n        <mat-label>Albumes</mat-label>\r\n        <mat-select>\r\n          <mat-option *ngFor=\"let id of albumsId\" value=\"id\">\r\n            {{ id }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>URL</mat-label>\r\n        <input type=\"text\"  matInput placeholder=\"URL\" #url>\r\n      </mat-form-field>\r\n      <button mat-button mat-flat-button color=\"accent\" class=\"buttonSave\"> \r\n        SAVE\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n  <app-photos></app-photos>\r\n</main>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {  Photo } from './../modules/photos';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhotosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPhotos(){\r\n   return this.http.get<Photo[]>('https://jsonplaceholder.typicode.com/photos?_limit=5');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MaterialModule } from './materials.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PhotosComponent } from './components/photos/photos.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PhotosComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,  \r\n    MaterialModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule }  from '@angular/core';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n    ],\r\n    exports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n    ] \r\n})\r\nexport class MaterialModule{}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}